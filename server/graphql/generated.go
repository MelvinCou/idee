// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetDrinksPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetDrinksPoiPointOfInterest_ResultSet struct {
	Total   int                                                           `json:"total"`
	Results []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetDrinksPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetDrinksPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSet) GetResults() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
	// Description textuelle courte ou longue du POI pouvant être associée à une
	// audience. Par exemple, un POI peut avoir une description dédiée aux écoles et
	// une autre dédiée au grand public. Si une description n&#039;a aucune audience
	// renseignée, on suppose qu&#039;elle est dédiée à tous les publics.
	HasDescription []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription `json:"hasDescription"`
	// Vrai si le produit propose un accès aux personnes à mobilité réduite
	ReducedMobilityAccess  []bool   `json:"reducedMobilityAccess"`
	LastUpdateDatatourisme []string `json:"lastUpdateDatatourisme"`
	// La localisation du POI, et donc le lieu où il peut être potentiellement consommé. Lieu de départ d&#039;un itinéraire.
	IsLocatedAt []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace `json:"isLocatedAt"`
}

// GetRdfs_label returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetHasDescription returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.HasDescription, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasDescription() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription {
	return v.HasDescription
}

// GetReducedMobilityAccess returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.ReducedMobilityAccess, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetReducedMobilityAccess() []bool {
	return v.ReducedMobilityAccess
}

// GetLastUpdateDatatourisme returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.LastUpdateDatatourisme, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetLastUpdateDatatourisme() []string {
	return v.LastUpdateDatatourisme
}

// GetIsLocatedAt returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.IsLocatedAt, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetIsLocatedAt() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace {
	return v.IsLocatedAt
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription includes the requested fields of the GraphQL type Description.
// The GraphQL type's documentation follows.
//
// Une description permet d&#039;associer la description textuelle d&#039;un POI
// avec l&#039;Audience à qui cette description est dédiée. Par exemple, un POI
// peut avoir une description dédiée aux écoles et une autre dédiée au grand
// public. Si une description n&#039;a aucune audience renseignée, on suppose
// qu&#039;elle est dédiée à tous les publics.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription struct {
	// Description longue de la ressource.
	Dc_description []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString `json:"dc_description"`
}

// GetDc_description returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription.Dc_description, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription) GetDc_description() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString {
	return v.Dc_description
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString includes the requested fields of the GraphQL type LangString.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString.Value, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString) GetValue() string {
	return v.Value
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace includes the requested fields of the GraphQL type Place.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace struct {
	// Les coordonnées géographiques de la ressource
	Schema_geo []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape `json:"schema_geo"`
}

// GetSchema_geo returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace.Schema_geo, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace) GetSchema_geo() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape {
	return v.Schema_geo
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape includes the requested fields of the GraphQL type schema_GeoCoordinates_schema_GeoShape.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape struct {
	// Valeur de la longitude de la ressource.
	Schema_longitude []float64 `json:"schema_longitude"`
	// Valeur de la latitude de la ressource.
	Schema_latitude []float64 `json:"schema_latitude"`
}

// GetSchema_longitude returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_longitude, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_longitude() []float64 {
	return v.Schema_longitude
}

// GetSchema_latitude returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_latitude, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_latitude() []float64 {
	return v.Schema_latitude
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetDrinksResponse is returned by GetDrinks on success.
type GetDrinksResponse struct {
	Poi GetDrinksPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetDrinksResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetDrinksResponse) GetPoi() GetDrinksPoiPointOfInterest_ResultSet { return v.Poi }

// GetEatsPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetEatsPoiPointOfInterest_ResultSet struct {
	Total   int                                                         `json:"total"`
	Results []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetEatsPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetEatsPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSet) GetResults() []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
	// Description textuelle courte ou longue du POI pouvant être associée à une
	// audience. Par exemple, un POI peut avoir une description dédiée aux écoles et
	// une autre dédiée au grand public. Si une description n&#039;a aucune audience
	// renseignée, on suppose qu&#039;elle est dédiée à tous les publics.
	HasDescription []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription `json:"hasDescription"`
	// Vrai si le produit propose un accès aux personnes à mobilité réduite
	ReducedMobilityAccess  []bool   `json:"reducedMobilityAccess"`
	LastUpdateDatatourisme []string `json:"lastUpdateDatatourisme"`
	// La localisation du POI, et donc le lieu où il peut être potentiellement consommé. Lieu de départ d&#039;un itinéraire.
	IsLocatedAt []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace `json:"isLocatedAt"`
}

// GetRdfs_label returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetHasDescription returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest.HasDescription, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasDescription() []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription {
	return v.HasDescription
}

// GetReducedMobilityAccess returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest.ReducedMobilityAccess, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetReducedMobilityAccess() []bool {
	return v.ReducedMobilityAccess
}

// GetLastUpdateDatatourisme returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest.LastUpdateDatatourisme, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetLastUpdateDatatourisme() []string {
	return v.LastUpdateDatatourisme
}

// GetIsLocatedAt returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest.IsLocatedAt, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetIsLocatedAt() []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace {
	return v.IsLocatedAt
}

// GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription includes the requested fields of the GraphQL type Description.
// The GraphQL type's documentation follows.
//
// Une description permet d&#039;associer la description textuelle d&#039;un POI
// avec l&#039;Audience à qui cette description est dédiée. Par exemple, un POI
// peut avoir une description dédiée aux écoles et une autre dédiée au grand
// public. Si une description n&#039;a aucune audience renseignée, on suppose
// qu&#039;elle est dédiée à tous les publics.
type GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription struct {
	// Description longue de la ressource.
	Dc_description []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString `json:"dc_description"`
}

// GetDc_description returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription.Dc_description, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription) GetDc_description() []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString {
	return v.Dc_description
}

// GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString includes the requested fields of the GraphQL type LangString.
type GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString) GetValue() string {
	return v.Value
}

// GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace includes the requested fields of the GraphQL type Place.
type GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace struct {
	// Les coordonnées géographiques de la ressource
	Schema_geo []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape `json:"schema_geo"`
}

// GetSchema_geo returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace.Schema_geo, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace) GetSchema_geo() []GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape {
	return v.Schema_geo
}

// GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape includes the requested fields of the GraphQL type schema_GeoCoordinates_schema_GeoShape.
type GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape struct {
	// Valeur de la longitude de la ressource.
	Schema_longitude []float64 `json:"schema_longitude"`
	// Valeur de la latitude de la ressource.
	Schema_latitude []float64 `json:"schema_latitude"`
}

// GetSchema_longitude returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_longitude, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_longitude() []float64 {
	return v.Schema_longitude
}

// GetSchema_latitude returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_latitude, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_latitude() []float64 {
	return v.Schema_latitude
}

// GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEatsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetEatsResponse is returned by GetEats on success.
type GetEatsResponse struct {
	Poi GetEatsPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetEatsResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetEatsResponse) GetPoi() GetEatsPoiPointOfInterest_ResultSet { return v.Poi }

// GetEnjoysPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetEnjoysPoiPointOfInterest_ResultSet struct {
	Total   int                                                           `json:"total"`
	Results []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetEnjoysPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetEnjoysPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSet) GetResults() []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
	// Description textuelle courte ou longue du POI pouvant être associée à une
	// audience. Par exemple, un POI peut avoir une description dédiée aux écoles et
	// une autre dédiée au grand public. Si une description n&#039;a aucune audience
	// renseignée, on suppose qu&#039;elle est dédiée à tous les publics.
	HasDescription []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription `json:"hasDescription"`
	// Vrai si le produit propose un accès aux personnes à mobilité réduite
	ReducedMobilityAccess  []bool   `json:"reducedMobilityAccess"`
	LastUpdateDatatourisme []string `json:"lastUpdateDatatourisme"`
	// La localisation du POI, et donc le lieu où il peut être potentiellement consommé. Lieu de départ d&#039;un itinéraire.
	IsLocatedAt []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace `json:"isLocatedAt"`
}

// GetRdfs_label returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetHasDescription returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest.HasDescription, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasDescription() []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription {
	return v.HasDescription
}

// GetReducedMobilityAccess returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest.ReducedMobilityAccess, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest) GetReducedMobilityAccess() []bool {
	return v.ReducedMobilityAccess
}

// GetLastUpdateDatatourisme returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest.LastUpdateDatatourisme, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest) GetLastUpdateDatatourisme() []string {
	return v.LastUpdateDatatourisme
}

// GetIsLocatedAt returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest.IsLocatedAt, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterest) GetIsLocatedAt() []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace {
	return v.IsLocatedAt
}

// GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription includes the requested fields of the GraphQL type Description.
// The GraphQL type's documentation follows.
//
// Une description permet d&#039;associer la description textuelle d&#039;un POI
// avec l&#039;Audience à qui cette description est dédiée. Par exemple, un POI
// peut avoir une description dédiée aux écoles et une autre dédiée au grand
// public. Si une description n&#039;a aucune audience renseignée, on suppose
// qu&#039;elle est dédiée à tous les publics.
type GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription struct {
	// Description longue de la ressource.
	Dc_description []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString `json:"dc_description"`
}

// GetDc_description returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription.Dc_description, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription) GetDc_description() []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString {
	return v.Dc_description
}

// GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString includes the requested fields of the GraphQL type LangString.
type GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString) GetValue() string {
	return v.Value
}

// GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace includes the requested fields of the GraphQL type Place.
type GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace struct {
	// Les coordonnées géographiques de la ressource
	Schema_geo []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape `json:"schema_geo"`
}

// GetSchema_geo returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace.Schema_geo, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace) GetSchema_geo() []GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape {
	return v.Schema_geo
}

// GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape includes the requested fields of the GraphQL type schema_GeoCoordinates_schema_GeoShape.
type GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape struct {
	// Valeur de la longitude de la ressource.
	Schema_longitude []float64 `json:"schema_longitude"`
	// Valeur de la latitude de la ressource.
	Schema_latitude []float64 `json:"schema_latitude"`
}

// GetSchema_longitude returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_longitude, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_longitude() []float64 {
	return v.Schema_longitude
}

// GetSchema_latitude returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_latitude, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_latitude() []float64 {
	return v.Schema_latitude
}

// GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEnjoysPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetEnjoysResponse is returned by GetEnjoys on success.
type GetEnjoysResponse struct {
	Poi GetEnjoysPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetEnjoysResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetEnjoysResponse) GetPoi() GetEnjoysPoiPointOfInterest_ResultSet { return v.Poi }

// GetSleepsPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetSleepsPoiPointOfInterest_ResultSet struct {
	Total   int                                                           `json:"total"`
	Results []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetSleepsPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetSleepsPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSet) GetResults() []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
	// Description textuelle courte ou longue du POI pouvant être associée à une
	// audience. Par exemple, un POI peut avoir une description dédiée aux écoles et
	// une autre dédiée au grand public. Si une description n&#039;a aucune audience
	// renseignée, on suppose qu&#039;elle est dédiée à tous les publics.
	HasDescription []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription `json:"hasDescription"`
	// Vrai si le produit propose un accès aux personnes à mobilité réduite
	ReducedMobilityAccess  []bool   `json:"reducedMobilityAccess"`
	LastUpdateDatatourisme []string `json:"lastUpdateDatatourisme"`
	// La localisation du POI, et donc le lieu où il peut être potentiellement consommé. Lieu de départ d&#039;un itinéraire.
	IsLocatedAt []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace `json:"isLocatedAt"`
}

// GetRdfs_label returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetHasDescription returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest.HasDescription, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasDescription() []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription {
	return v.HasDescription
}

// GetReducedMobilityAccess returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest.ReducedMobilityAccess, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetReducedMobilityAccess() []bool {
	return v.ReducedMobilityAccess
}

// GetLastUpdateDatatourisme returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest.LastUpdateDatatourisme, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetLastUpdateDatatourisme() []string {
	return v.LastUpdateDatatourisme
}

// GetIsLocatedAt returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest.IsLocatedAt, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetIsLocatedAt() []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace {
	return v.IsLocatedAt
}

// GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription includes the requested fields of the GraphQL type Description.
// The GraphQL type's documentation follows.
//
// Une description permet d&#039;associer la description textuelle d&#039;un POI
// avec l&#039;Audience à qui cette description est dédiée. Par exemple, un POI
// peut avoir une description dédiée aux écoles et une autre dédiée au grand
// public. Si une description n&#039;a aucune audience renseignée, on suppose
// qu&#039;elle est dédiée à tous les publics.
type GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription struct {
	// Description longue de la ressource.
	Dc_description []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString `json:"dc_description"`
}

// GetDc_description returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription.Dc_description, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription) GetDc_description() []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString {
	return v.Dc_description
}

// GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString includes the requested fields of the GraphQL type LangString.
type GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString.Value, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString) GetValue() string {
	return v.Value
}

// GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace includes the requested fields of the GraphQL type Place.
type GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace struct {
	// Les coordonnées géographiques de la ressource
	Schema_geo []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape `json:"schema_geo"`
}

// GetSchema_geo returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace.Schema_geo, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace) GetSchema_geo() []GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape {
	return v.Schema_geo
}

// GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape includes the requested fields of the GraphQL type schema_GeoCoordinates_schema_GeoShape.
type GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape struct {
	// Valeur de la longitude de la ressource.
	Schema_longitude []float64 `json:"schema_longitude"`
	// Valeur de la latitude de la ressource.
	Schema_latitude []float64 `json:"schema_latitude"`
}

// GetSchema_longitude returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_longitude, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_longitude() []float64 {
	return v.Schema_longitude
}

// GetSchema_latitude returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_latitude, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_latitude() []float64 {
	return v.Schema_latitude
}

// GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetSleepsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetSleepsResponse is returned by GetSleeps on success.
type GetSleepsResponse struct {
	Poi GetSleepsPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetSleepsResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetSleepsResponse) GetPoi() GetSleepsPoiPointOfInterest_ResultSet { return v.Poi }

// GetTotalPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetTotalPoiPointOfInterest_ResultSet struct {
	Total int `json:"total"`
}

// GetTotal returns GetTotalPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetTotalPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetTotalResponse is returned by GetTotal on success.
type GetTotalResponse struct {
	Poi GetTotalPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetTotalResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetTotalResponse) GetPoi() GetTotalPoiPointOfInterest_ResultSet { return v.Poi }

// GetTravelsPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetTravelsPoiPointOfInterest_ResultSet struct {
	Total   int                                                            `json:"total"`
	Results []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetTravelsPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetTravelsPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSet) GetResults() []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
	// Description textuelle courte ou longue du POI pouvant être associée à une
	// audience. Par exemple, un POI peut avoir une description dédiée aux écoles et
	// une autre dédiée au grand public. Si une description n&#039;a aucune audience
	// renseignée, on suppose qu&#039;elle est dédiée à tous les publics.
	HasDescription []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription `json:"hasDescription"`
	// Vrai si le produit propose un accès aux personnes à mobilité réduite
	ReducedMobilityAccess  []bool   `json:"reducedMobilityAccess"`
	LastUpdateDatatourisme []string `json:"lastUpdateDatatourisme"`
	// La localisation du POI, et donc le lieu où il peut être potentiellement consommé. Lieu de départ d&#039;un itinéraire.
	IsLocatedAt []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace `json:"isLocatedAt"`
}

// GetRdfs_label returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetHasDescription returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest.HasDescription, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasDescription() []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription {
	return v.HasDescription
}

// GetReducedMobilityAccess returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest.ReducedMobilityAccess, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetReducedMobilityAccess() []bool {
	return v.ReducedMobilityAccess
}

// GetLastUpdateDatatourisme returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest.LastUpdateDatatourisme, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetLastUpdateDatatourisme() []string {
	return v.LastUpdateDatatourisme
}

// GetIsLocatedAt returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest.IsLocatedAt, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterest) GetIsLocatedAt() []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace {
	return v.IsLocatedAt
}

// GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription includes the requested fields of the GraphQL type Description.
// The GraphQL type's documentation follows.
//
// Une description permet d&#039;associer la description textuelle d&#039;un POI
// avec l&#039;Audience à qui cette description est dédiée. Par exemple, un POI
// peut avoir une description dédiée aux écoles et une autre dédiée au grand
// public. Si une description n&#039;a aucune audience renseignée, on suppose
// qu&#039;elle est dédiée à tous les publics.
type GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription struct {
	// Description longue de la ressource.
	Dc_description []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString `json:"dc_description"`
}

// GetDc_description returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription.Dc_description, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription) GetDc_description() []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString {
	return v.Dc_description
}

// GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString includes the requested fields of the GraphQL type LangString.
type GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString.Value, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString) GetValue() string {
	return v.Value
}

// GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace includes the requested fields of the GraphQL type Place.
type GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace struct {
	// Les coordonnées géographiques de la ressource
	Schema_geo []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape `json:"schema_geo"`
}

// GetSchema_geo returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace.Schema_geo, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlace) GetSchema_geo() []GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape {
	return v.Schema_geo
}

// GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape includes the requested fields of the GraphQL type schema_GeoCoordinates_schema_GeoShape.
type GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape struct {
	// Valeur de la longitude de la ressource.
	Schema_longitude []float64 `json:"schema_longitude"`
	// Valeur de la latitude de la ressource.
	Schema_latitude []float64 `json:"schema_latitude"`
}

// GetSchema_longitude returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_longitude, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_longitude() []float64 {
	return v.Schema_longitude
}

// GetSchema_latitude returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape.Schema_latitude, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestIsLocatedAtPlaceSchema_geoSchema_GeoCoordinates_schema_GeoShape) GetSchema_latitude() []float64 {
	return v.Schema_latitude
}

// GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetTravelsPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetTravelsResponse is returned by GetTravels on success.
type GetTravelsResponse struct {
	Poi GetTravelsPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetTravelsResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetTravelsResponse) GetPoi() GetTravelsPoiPointOfInterest_ResultSet { return v.Poi }

// __GetDrinksInput is used internally by genqlient
type __GetDrinksInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetDrinksInput.City, and is useful for accessing the field via an interface.
func (v *__GetDrinksInput) GetCity() string { return v.City }

// GetFrom returns __GetDrinksInput.From, and is useful for accessing the field via an interface.
func (v *__GetDrinksInput) GetFrom() int { return v.From }

// GetSize returns __GetDrinksInput.Size, and is useful for accessing the field via an interface.
func (v *__GetDrinksInput) GetSize() int { return v.Size }

// __GetEatsInput is used internally by genqlient
type __GetEatsInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetEatsInput.City, and is useful for accessing the field via an interface.
func (v *__GetEatsInput) GetCity() string { return v.City }

// GetFrom returns __GetEatsInput.From, and is useful for accessing the field via an interface.
func (v *__GetEatsInput) GetFrom() int { return v.From }

// GetSize returns __GetEatsInput.Size, and is useful for accessing the field via an interface.
func (v *__GetEatsInput) GetSize() int { return v.Size }

// __GetEnjoysInput is used internally by genqlient
type __GetEnjoysInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetEnjoysInput.City, and is useful for accessing the field via an interface.
func (v *__GetEnjoysInput) GetCity() string { return v.City }

// GetFrom returns __GetEnjoysInput.From, and is useful for accessing the field via an interface.
func (v *__GetEnjoysInput) GetFrom() int { return v.From }

// GetSize returns __GetEnjoysInput.Size, and is useful for accessing the field via an interface.
func (v *__GetEnjoysInput) GetSize() int { return v.Size }

// __GetSleepsInput is used internally by genqlient
type __GetSleepsInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetSleepsInput.City, and is useful for accessing the field via an interface.
func (v *__GetSleepsInput) GetCity() string { return v.City }

// GetFrom returns __GetSleepsInput.From, and is useful for accessing the field via an interface.
func (v *__GetSleepsInput) GetFrom() int { return v.From }

// GetSize returns __GetSleepsInput.Size, and is useful for accessing the field via an interface.
func (v *__GetSleepsInput) GetSize() int { return v.Size }

// __GetTravelsInput is used internally by genqlient
type __GetTravelsInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetTravelsInput.City, and is useful for accessing the field via an interface.
func (v *__GetTravelsInput) GetCity() string { return v.City }

// GetFrom returns __GetTravelsInput.From, and is useful for accessing the field via an interface.
func (v *__GetTravelsInput) GetFrom() int { return v.From }

// GetSize returns __GetTravelsInput.Size, and is useful for accessing the field via an interface.
func (v *__GetTravelsInput) GetSize() int { return v.Size }

// The query or mutation executed by GetDrinks.
const GetDrinks_Operation = `
query GetDrinks ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#BarOrPub","https://www.datatourisme.fr/ontology/core#BistroOrWineBar","https://www.datatourisme.fr/ontology/core#Abbey","https://www.datatourisme.fr/ontology/core#WineCellar"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
			hasDescription {
				dc_description {
					value
				}
			}
			reducedMobilityAccess
			lastUpdateDatatourisme
			isLocatedAt {
				schema_geo {
					schema_longitude
					schema_latitude
				}
			}
		}
	}
}
`

func GetDrinks(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetDrinksResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetDrinks",
		Query:  GetDrinks_Operation,
		Variables: &__GetDrinksInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetDrinksResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetEats.
const GetEats_Operation = `
query GetEats ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#Bakery","https://www.datatourisme.fr/ontology/core#BrasserieOrTavern","https://www.datatourisme.fr/ontology/core#CafeOrTeahouse","https://www.datatourisme.fr/ontology/core#HotelRestaurant","https://www.datatourisme.fr/ontology/core#Restaurant","https://www.datatourisme.fr/ontology/core#GourmetRestaurant"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
			hasDescription {
				dc_description {
					value
				}
			}
			reducedMobilityAccess
			lastUpdateDatatourisme
			isLocatedAt {
				schema_geo {
					schema_longitude
					schema_latitude
				}
			}
		}
	}
}
`

func GetEats(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetEatsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetEats",
		Query:  GetEats_Operation,
		Variables: &__GetEatsInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetEatsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetEnjoys.
const GetEnjoys_Operation = `
query GetEnjoys ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#CulturalSite","https://www.datatourisme.fr/ontology/core#SportsAndLeisurePlace","https://www.datatourisme.fr/ontology/core#SightseeingBoat","https://www.datatourisme.fr/ontology/core#WalkingTour","https://www.datatourisme.fr/ontology/core#ThemePark","https://www.datatourisme.fr/ontology/core#ParkAndGarden","https://www.datatourisme.fr/ontology/core#SportsTheme","https://www.datatourisme.fr/ontology/core#ZooAnimalPark","https://www.datatourisme.fr/ontology/core#Casino"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
			hasDescription {
				dc_description {
					value
				}
			}
			reducedMobilityAccess
			lastUpdateDatatourisme
			isLocatedAt {
				schema_geo {
					schema_longitude
					schema_latitude
				}
			}
		}
	}
}
`

func GetEnjoys(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetEnjoysResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetEnjoys",
		Query:  GetEnjoys_Operation,
		Variables: &__GetEnjoysInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetEnjoysResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetSleeps.
const GetSleeps_Operation = `
query GetSleeps ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#Apartement","https://www.datatourisme.fr/ontology/core#CamperVanArea","https://www.datatourisme.fr/ontology/core#YouthHostelAndInternationalCenter","https://www.datatourisme.fr/ontology/core#GroupLodging","https://www.datatourisme.fr/ontology/core#Hotel","https://www.datatourisme.fr/ontology/core#AccommodationProduct"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
			hasDescription {
				dc_description {
					value
				}
			}
			reducedMobilityAccess
			lastUpdateDatatourisme
			isLocatedAt {
				schema_geo {
					schema_longitude
					schema_latitude
				}
			}
		}
	}
}
`

func GetSleeps(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetSleepsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetSleeps",
		Query:  GetSleeps_Operation,
		Variables: &__GetSleepsInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetSleepsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetTotal.
const GetTotal_Operation = `
query GetTotal {
	poi {
		total
	}
}
`

func GetTotal(
	ctx_ context.Context,
	client_ graphql.Client,
) (*GetTotalResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetTotal",
		Query:  GetTotal_Operation,
	}
	var err_ error

	var data_ GetTotalResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetTravels.
const GetTravels_Operation = `
query GetTravels ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#CarpoolArea","https://www.datatourisme.fr/ontology/core#TaxiStation","https://www.datatourisme.fr/ontology/core#BusStop","https://www.datatourisme.fr/ontology/core#BicycleLocomotionMode","https://www.datatourisme.fr/ontology/core#TrainStation","https://www.datatourisme.fr/ontology/core#BusStation"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
			hasDescription {
				dc_description {
					value
				}
			}
			reducedMobilityAccess
			lastUpdateDatatourisme
			isLocatedAt {
				schema_geo {
					schema_longitude
					schema_latitude
				}
			}
		}
	}
}
`

func GetTravels(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetTravelsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetTravels",
		Query:  GetTravels_Operation,
		Variables: &__GetTravelsInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetTravelsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
