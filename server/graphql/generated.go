// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetDrinksPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetDrinksPoiPointOfInterest_ResultSet struct {
	Total   int                                                           `json:"total"`
	Results []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetDrinksPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetDrinksPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSet) GetResults() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
}

// GetRdfs_label returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetDrinksPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetDrinksResponse is returned by GetDrinks on success.
type GetDrinksResponse struct {
	Poi GetDrinksPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetDrinksResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetDrinksResponse) GetPoi() GetDrinksPoiPointOfInterest_ResultSet { return v.Poi }

// GetEatPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetEatPoiPointOfInterest_ResultSet struct {
	Total   int                                                        `json:"total"`
	Results []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetEatPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetEatPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSet) GetResults() []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
	// Description textuelle courte ou longue du POI pouvant être associée à une
	// audience. Par exemple, un POI peut avoir une description dédiée aux écoles et
	// une autre dédiée au grand public. Si une description n&#039;a aucune audience
	// renseignée, on suppose qu&#039;elle est dédiée à tous les publics.
	HasDescription []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription `json:"hasDescription"`
	// Vrai si le produit propose un accès aux personnes à mobilité réduite
	ReducedMobilityAccess  []bool   `json:"reducedMobilityAccess"`
	LastUpdateDatatourisme []string `json:"lastUpdateDatatourisme"`
}

// GetRdfs_label returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetHasDescription returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest.HasDescription, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasDescription() []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription {
	return v.HasDescription
}

// GetReducedMobilityAccess returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest.ReducedMobilityAccess, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest) GetReducedMobilityAccess() []bool {
	return v.ReducedMobilityAccess
}

// GetLastUpdateDatatourisme returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest.LastUpdateDatatourisme, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterest) GetLastUpdateDatatourisme() []string {
	return v.LastUpdateDatatourisme
}

// GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription includes the requested fields of the GraphQL type Description.
// The GraphQL type's documentation follows.
//
// Une description permet d&#039;associer la description textuelle d&#039;un POI
// avec l&#039;Audience à qui cette description est dédiée. Par exemple, un POI
// peut avoir une description dédiée aux écoles et une autre dédiée au grand
// public. Si une description n&#039;a aucune audience renseignée, on suppose
// qu&#039;elle est dédiée à tous les publics.
type GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription struct {
	// Description longue de la ressource.
	Dc_description []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString `json:"dc_description"`
}

// GetDc_description returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription.Dc_description, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription) GetDc_description() []GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString {
	return v.Dc_description
}

// GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString includes the requested fields of the GraphQL type LangString.
type GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString) GetValue() string {
	return v.Value
}

// GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEatPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetEatResponse is returned by GetEat on success.
type GetEatResponse struct {
	Poi GetEatPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetEatResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetEatResponse) GetPoi() GetEatPoiPointOfInterest_ResultSet { return v.Poi }

// GetEnjoyPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetEnjoyPoiPointOfInterest_ResultSet struct {
	Total   int                                                          `json:"total"`
	Results []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetEnjoyPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetEnjoyPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSet) GetResults() []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
	// Description textuelle courte ou longue du POI pouvant être associée à une
	// audience. Par exemple, un POI peut avoir une description dédiée aux écoles et
	// une autre dédiée au grand public. Si une description n&#039;a aucune audience
	// renseignée, on suppose qu&#039;elle est dédiée à tous les publics.
	HasDescription []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription `json:"hasDescription"`
	// Vrai si le produit propose un accès aux personnes à mobilité réduite
	ReducedMobilityAccess  []bool   `json:"reducedMobilityAccess"`
	LastUpdateDatatourisme []string `json:"lastUpdateDatatourisme"`
}

// GetRdfs_label returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetHasDescription returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest.HasDescription, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasDescription() []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription {
	return v.HasDescription
}

// GetReducedMobilityAccess returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest.ReducedMobilityAccess, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest) GetReducedMobilityAccess() []bool {
	return v.ReducedMobilityAccess
}

// GetLastUpdateDatatourisme returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest.LastUpdateDatatourisme, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterest) GetLastUpdateDatatourisme() []string {
	return v.LastUpdateDatatourisme
}

// GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription includes the requested fields of the GraphQL type Description.
// The GraphQL type's documentation follows.
//
// Une description permet d&#039;associer la description textuelle d&#039;un POI
// avec l&#039;Audience à qui cette description est dédiée. Par exemple, un POI
// peut avoir une description dédiée aux écoles et une autre dédiée au grand
// public. Si une description n&#039;a aucune audience renseignée, on suppose
// qu&#039;elle est dédiée à tous les publics.
type GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription struct {
	// Description longue de la ressource.
	Dc_description []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString `json:"dc_description"`
}

// GetDc_description returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription.Dc_description, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription) GetDc_description() []GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString {
	return v.Dc_description
}

// GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString includes the requested fields of the GraphQL type LangString.
type GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString) GetValue() string {
	return v.Value
}

// GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetEnjoyPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetEnjoyResponse is returned by GetEnjoy on success.
type GetEnjoyResponse struct {
	Poi GetEnjoyPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetEnjoyResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetEnjoyResponse) GetPoi() GetEnjoyPoiPointOfInterest_ResultSet { return v.Poi }

// GetSleepPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetSleepPoiPointOfInterest_ResultSet struct {
	Total   int                                                          `json:"total"`
	Results []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetSleepPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetSleepPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSet) GetResults() []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
	// Description textuelle courte ou longue du POI pouvant être associée à une
	// audience. Par exemple, un POI peut avoir une description dédiée aux écoles et
	// une autre dédiée au grand public. Si une description n&#039;a aucune audience
	// renseignée, on suppose qu&#039;elle est dédiée à tous les publics.
	HasDescription []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription `json:"hasDescription"`
	// Vrai si le produit propose un accès aux personnes à mobilité réduite
	ReducedMobilityAccess  []bool   `json:"reducedMobilityAccess"`
	LastUpdateDatatourisme []string `json:"lastUpdateDatatourisme"`
}

// GetRdfs_label returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetHasDescription returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest.HasDescription, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasDescription() []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription {
	return v.HasDescription
}

// GetReducedMobilityAccess returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest.ReducedMobilityAccess, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest) GetReducedMobilityAccess() []bool {
	return v.ReducedMobilityAccess
}

// GetLastUpdateDatatourisme returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest.LastUpdateDatatourisme, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterest) GetLastUpdateDatatourisme() []string {
	return v.LastUpdateDatatourisme
}

// GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription includes the requested fields of the GraphQL type Description.
// The GraphQL type's documentation follows.
//
// Une description permet d&#039;associer la description textuelle d&#039;un POI
// avec l&#039;Audience à qui cette description est dédiée. Par exemple, un POI
// peut avoir une description dédiée aux écoles et une autre dédiée au grand
// public. Si une description n&#039;a aucune audience renseignée, on suppose
// qu&#039;elle est dédiée à tous les publics.
type GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription struct {
	// Description longue de la ressource.
	Dc_description []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString `json:"dc_description"`
}

// GetDc_description returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription.Dc_description, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription) GetDc_description() []GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString {
	return v.Dc_description
}

// GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString includes the requested fields of the GraphQL type LangString.
type GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString.Value, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString) GetValue() string {
	return v.Value
}

// GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetSleepPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetSleepResponse is returned by GetSleep on success.
type GetSleepResponse struct {
	Poi GetSleepPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetSleepResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetSleepResponse) GetPoi() GetSleepPoiPointOfInterest_ResultSet { return v.Poi }

// GetTotalPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetTotalPoiPointOfInterest_ResultSet struct {
	Total int `json:"total"`
}

// GetTotal returns GetTotalPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetTotalPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetTotalResponse is returned by GetTotal on success.
type GetTotalResponse struct {
	Poi GetTotalPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetTotalResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetTotalResponse) GetPoi() GetTotalPoiPointOfInterest_ResultSet { return v.Poi }

// GetTravelPoiPointOfInterest_ResultSet includes the requested fields of the GraphQL type PointOfInterest_ResultSet.
type GetTravelPoiPointOfInterest_ResultSet struct {
	Total   int                                                           `json:"total"`
	Results []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest `json:"results"`
}

// GetTotal returns GetTravelPoiPointOfInterest_ResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSet) GetTotal() int { return v.Total }

// GetResults returns GetTravelPoiPointOfInterest_ResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSet) GetResults() []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest {
	return v.Results
}

// GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest includes the requested fields of the GraphQL type PointOfInterest.
// The GraphQL type's documentation follows.
//
// Tout objet touristique qui mérite d&#039;être décrit et valorisé. Un POI (Point
// of Interest) est un élément touristique qui est géré par un Agent et qui peut
// être consommé via des Produits et Services. ex : Un Restaurant, un Hôtel, une
// Pratique, un Objet patrimonial
type GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest struct {
	// Etiquette courte décrivant la ressource.
	Rdfs_label []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString `json:"rdfs_label"`
	// Description de la ressource.
	Rdfs_comment []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString `json:"rdfs_comment"`
	// L&#039;agent à contacter pour affaires générales relatives à ce POI.
	HasContact []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent `json:"hasContact"`
	// Description textuelle courte ou longue du POI pouvant être associée à une
	// audience. Par exemple, un POI peut avoir une description dédiée aux écoles et
	// une autre dédiée au grand public. Si une description n&#039;a aucune audience
	// renseignée, on suppose qu&#039;elle est dédiée à tous les publics.
	HasDescription []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription `json:"hasDescription"`
	// Vrai si le produit propose un accès aux personnes à mobilité réduite
	ReducedMobilityAccess  []bool   `json:"reducedMobilityAccess"`
	LastUpdateDatatourisme []string `json:"lastUpdateDatatourisme"`
}

// GetRdfs_label returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_label, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_label() []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString {
	return v.Rdfs_label
}

// GetRdfs_comment returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest.Rdfs_comment, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest) GetRdfs_comment() []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString {
	return v.Rdfs_comment
}

// GetHasContact returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest.HasContact, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasContact() []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent {
	return v.HasContact
}

// GetHasDescription returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest.HasDescription, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest) GetHasDescription() []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription {
	return v.HasDescription
}

// GetReducedMobilityAccess returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest.ReducedMobilityAccess, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest) GetReducedMobilityAccess() []bool {
	return v.ReducedMobilityAccess
}

// GetLastUpdateDatatourisme returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest.LastUpdateDatatourisme, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterest) GetLastUpdateDatatourisme() []string {
	return v.LastUpdateDatatourisme
}

// GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent includes the requested fields of the GraphQL type Agent.
type GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent struct {
	// L&#039;adresse du site internet d&#039;un Agent.
	Foaf_homepage []string `json:"foaf_homepage"`
	// Un numéro de téléphone.
	Schema_telephone []string `json:"schema_telephone"`
	// Un courriel, courrier électronique.
	Schema_email []string `json:"schema_email"`
}

// GetFoaf_homepage returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Foaf_homepage, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetFoaf_homepage() []string {
	return v.Foaf_homepage
}

// GetSchema_telephone returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_telephone, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_telephone() []string {
	return v.Schema_telephone
}

// GetSchema_email returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent.Schema_email, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasContactAgent) GetSchema_email() []string {
	return v.Schema_email
}

// GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription includes the requested fields of the GraphQL type Description.
// The GraphQL type's documentation follows.
//
// Une description permet d&#039;associer la description textuelle d&#039;un POI
// avec l&#039;Audience à qui cette description est dédiée. Par exemple, un POI
// peut avoir une description dédiée aux écoles et une autre dédiée au grand
// public. Si une description n&#039;a aucune audience renseignée, on suppose
// qu&#039;elle est dédiée à tous les publics.
type GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription struct {
	// Description longue de la ressource.
	Dc_description []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString `json:"dc_description"`
}

// GetDc_description returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription.Dc_description, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescription) GetDc_description() []GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString {
	return v.Dc_description
}

// GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString includes the requested fields of the GraphQL type LangString.
type GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString.Value, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestHasDescriptionDc_descriptionLangString) GetValue() string {
	return v.Value
}

// GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString includes the requested fields of the GraphQL type LangString.
type GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString.Value, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_commentLangString) GetValue() string {
	return v.Value
}

// GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString includes the requested fields of the GraphQL type LangString.
type GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString struct {
	// Literal value
	Value string `json:"value"`
}

// GetValue returns GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString.Value, and is useful for accessing the field via an interface.
func (v *GetTravelPoiPointOfInterest_ResultSetResultsPointOfInterestRdfs_labelLangString) GetValue() string {
	return v.Value
}

// GetTravelResponse is returned by GetTravel on success.
type GetTravelResponse struct {
	Poi GetTravelPoiPointOfInterest_ResultSet `json:"poi"`
}

// GetPoi returns GetTravelResponse.Poi, and is useful for accessing the field via an interface.
func (v *GetTravelResponse) GetPoi() GetTravelPoiPointOfInterest_ResultSet { return v.Poi }

// __GetDrinksInput is used internally by genqlient
type __GetDrinksInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetDrinksInput.City, and is useful for accessing the field via an interface.
func (v *__GetDrinksInput) GetCity() string { return v.City }

// GetFrom returns __GetDrinksInput.From, and is useful for accessing the field via an interface.
func (v *__GetDrinksInput) GetFrom() int { return v.From }

// GetSize returns __GetDrinksInput.Size, and is useful for accessing the field via an interface.
func (v *__GetDrinksInput) GetSize() int { return v.Size }

// __GetEatInput is used internally by genqlient
type __GetEatInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetEatInput.City, and is useful for accessing the field via an interface.
func (v *__GetEatInput) GetCity() string { return v.City }

// GetFrom returns __GetEatInput.From, and is useful for accessing the field via an interface.
func (v *__GetEatInput) GetFrom() int { return v.From }

// GetSize returns __GetEatInput.Size, and is useful for accessing the field via an interface.
func (v *__GetEatInput) GetSize() int { return v.Size }

// __GetEnjoyInput is used internally by genqlient
type __GetEnjoyInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetEnjoyInput.City, and is useful for accessing the field via an interface.
func (v *__GetEnjoyInput) GetCity() string { return v.City }

// GetFrom returns __GetEnjoyInput.From, and is useful for accessing the field via an interface.
func (v *__GetEnjoyInput) GetFrom() int { return v.From }

// GetSize returns __GetEnjoyInput.Size, and is useful for accessing the field via an interface.
func (v *__GetEnjoyInput) GetSize() int { return v.Size }

// __GetSleepInput is used internally by genqlient
type __GetSleepInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetSleepInput.City, and is useful for accessing the field via an interface.
func (v *__GetSleepInput) GetCity() string { return v.City }

// GetFrom returns __GetSleepInput.From, and is useful for accessing the field via an interface.
func (v *__GetSleepInput) GetFrom() int { return v.From }

// GetSize returns __GetSleepInput.Size, and is useful for accessing the field via an interface.
func (v *__GetSleepInput) GetSize() int { return v.Size }

// __GetTravelInput is used internally by genqlient
type __GetTravelInput struct {
	City string `json:"city"`
	From int    `json:"from"`
	Size int    `json:"size"`
}

// GetCity returns __GetTravelInput.City, and is useful for accessing the field via an interface.
func (v *__GetTravelInput) GetCity() string { return v.City }

// GetFrom returns __GetTravelInput.From, and is useful for accessing the field via an interface.
func (v *__GetTravelInput) GetFrom() int { return v.From }

// GetSize returns __GetTravelInput.Size, and is useful for accessing the field via an interface.
func (v *__GetTravelInput) GetSize() int { return v.Size }

// The query or mutation executed by GetDrinks.
const GetDrinks_Operation = `
query GetDrinks ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#BarOrPub","https://www.datatourisme.fr/ontology/core#BistroOrWineBar","https://www.datatourisme.fr/ontology/core#Abbey","https://www.datatourisme.fr/ontology/core#WineCellar"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
		}
	}
}
`

func GetDrinks(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetDrinksResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetDrinks",
		Query:  GetDrinks_Operation,
		Variables: &__GetDrinksInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetDrinksResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetEat.
const GetEat_Operation = `
query GetEat ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#Bakery","https://www.datatourisme.fr/ontology/core#BrasserieOrTavern","https://www.datatourisme.fr/ontology/core#CafeOrTeahouse","https://www.datatourisme.fr/ontology/core#HotelRestaurant","https://www.datatourisme.fr/ontology/core#Restaurant","https://www.datatourisme.fr/ontology/core#GourmetRestaurant"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
			hasDescription {
				dc_description {
					value
				}
			}
			reducedMobilityAccess
			lastUpdateDatatourisme
		}
	}
}
`

func GetEat(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetEatResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetEat",
		Query:  GetEat_Operation,
		Variables: &__GetEatInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetEatResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetEnjoy.
const GetEnjoy_Operation = `
query GetEnjoy ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#CulturalSite","https://www.datatourisme.fr/ontology/core#SportsAndLeisurePlace","https://www.datatourisme.fr/ontology/core#SightseeingBoat","https://www.datatourisme.fr/ontology/core#WalkingTour","https://www.datatourisme.fr/ontology/core#ThemePark","https://www.datatourisme.fr/ontology/core#ParkAndGarden","https://www.datatourisme.fr/ontology/core#SportsTheme","https://www.datatourisme.fr/ontology/core#ZooAnimalPark","https://www.datatourisme.fr/ontology/core#Casino"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
			hasDescription {
				dc_description {
					value
				}
			}
			reducedMobilityAccess
			lastUpdateDatatourisme
		}
	}
}
`

func GetEnjoy(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetEnjoyResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetEnjoy",
		Query:  GetEnjoy_Operation,
		Variables: &__GetEnjoyInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetEnjoyResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetSleep.
const GetSleep_Operation = `
query GetSleep ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#Apartement","https://www.datatourisme.fr/ontology/core#CamperVanArea","https://www.datatourisme.fr/ontology/core#YouthHostelAndInternationalCenter","https://www.datatourisme.fr/ontology/core#GroupLodging","https://www.datatourisme.fr/ontology/core#Hotel","https://www.datatourisme.fr/ontology/core#AccommodationProduct"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
			hasDescription {
				dc_description {
					value
				}
			}
			reducedMobilityAccess
			lastUpdateDatatourisme
		}
	}
}
`

func GetSleep(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetSleepResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetSleep",
		Query:  GetSleep_Operation,
		Variables: &__GetSleepInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetSleepResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetTotal.
const GetTotal_Operation = `
query GetTotal {
	poi {
		total
	}
}
`

func GetTotal(
	ctx_ context.Context,
	client_ graphql.Client,
) (*GetTotalResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetTotal",
		Query:  GetTotal_Operation,
	}
	var err_ error

	var data_ GetTotalResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetTravel.
const GetTravel_Operation = `
query GetTravel ($city: String, $from: Int, $size: Int) {
	poi(from: $from, size: $size, filters: [{isLocatedAt:{schema_address:{hasAddressCity:{rdfs_label:{_text:$city}}}},rdf_type:{_in:["https://www.datatourisme.fr/ontology/core#CarpoolArea","https://www.datatourisme.fr/ontology/core#TaxiStation","https://www.datatourisme.fr/ontology/core#BusStop","https://www.datatourisme.fr/ontology/core#BicycleLocomotionMode","https://www.datatourisme.fr/ontology/core#TrainStation","https://www.datatourisme.fr/ontology/core#BusStation"]}}]) {
		total
		results {
			rdfs_label {
				value
			}
			rdfs_comment {
				value
			}
			hasContact {
				foaf_homepage
				schema_telephone
				schema_email
			}
			hasDescription {
				dc_description {
					value
				}
			}
			reducedMobilityAccess
			lastUpdateDatatourisme
		}
	}
}
`

func GetTravel(
	ctx_ context.Context,
	client_ graphql.Client,
	city string,
	from int,
	size int,
) (*GetTravelResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetTravel",
		Query:  GetTravel_Operation,
		Variables: &__GetTravelInput{
			City: city,
			From: from,
			Size: size,
		},
	}
	var err_ error

	var data_ GetTravelResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
